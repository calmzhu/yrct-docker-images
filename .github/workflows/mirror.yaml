name: Mirror
on:
  push:
    branches:
      - main
    paths:
      - 'mirrors.yaml'
  workflow_dispatch:
concurrency:
  group: mirror-${{ inputs.dst }}
  cancel-in-progress: true
jobs:
  build-metrix:
    outputs:
      images: ${{ steps.list_image.outputs.images }}
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 10
      - name: list_image
        id: list_image
        shell: bash
        run: |
          set -x
          last_version=`git log -2 --pretty=format:"%h" mirrors.yaml | tail -n 1`
          for image in `yq '.[].source' mirrors.yaml`
          do
            current_mirror_info_digest=`yq ".[] | select(.source == \"$image\")" -o json -I 0 -M mirrors.yaml | sha256sum | awk '{print $1}'`
            last_mirror_info_digest=`git show $last_version:mirrors.yaml | yq ".[] | select(.source == \"$image\")" -o json -I 0 -M  | sha256sum | awk '{print $1}'`
            [[ "$last_mirror_info_digest" == "$current_mirror_info_digest" ]] || echo "- $image" >> change_image_manifest
          done
          if [[ -f change_image_manifest ]];then
            # Sync latest edited image in mirrors.yaml
            images=`yq -o json -I 0 -M change_image_manifest`
          else
            # Sync all image if no changed defined
            images=`yq -e 'map(.source)' mirrors.yaml -o json -I 0 -M`
          fi
          echo "images=$images" >> "$GITHUB_OUTPUT"

  mirror:
    runs-on: [ ubuntu-latest ]
    needs:
      - build-metrix
    strategy:
      max-parallel: 1
      matrix:
        image: ${{ fromJson(needs.build-metrix.outputs.images) }}

    steps:
      - uses: actions/checkout@v4
      - name: set-mirror-input
        id: set-mirror
        run: |
          mirror_info=`yq '.[] | select(.source == "${{ matrix.image }}")' -o json -I 0 -M mirrors.yaml`
          echo "source=`yq '.source' <<<$mirror_info`">>"$GITHUB_OUTPUT"
          echo "target=`yq '.dst' <<<$mirror_info`">>"$GITHUB_OUTPUT"
          echo "tags=`yq '.tags | map(.name)' -o tsv <<<$mirror_info`">>"$GITHUB_OUTPUT"

      - uses: './.github/actions/docker-image-mirror'
        name: mirror
        with:
          source-image: ${{ steps.set-mirror.outputs.source }}
          target-registry: ${{ vars.ALIYUN_ECR_URL }}
          target-registry-user: ${{ secrets.ALIYUN_ECR_USERNAME }}
          target-registry-password: ${{ secrets.ALIYUN_ECR_AUTH }}
          target-image-name: ${{ steps.set-mirror.outputs.target }}
          tags: ${{ steps.set-mirror.outputs.tags }}